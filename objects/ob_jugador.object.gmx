<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_jugador_corre</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicio atributos

efecto_estela = false;
cantidad_estela = 12; 
for( var i = 0; i &lt; cantidad_estela; i++ ){
    prev_x[i] = x - 8 * (i+1); 
    prev_y[i] = y; 
}

gravedad = 2;
vel_hor = 0;
vel_ver = 0;
vel_salto = -20;

en_suelo = false;


vel_sprite = 0.2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Salto y colisiones

if( sprite_index != sp_jugador_muere){ 
    boton_salto = ( mouse_check_button_pressed(mb_left) );
    boton_abajo = ( mouse_check_button_pressed(mb_right) );
}

if( boton_salto == true and boton_abajo == true ){

    boton_salto = false;
    boton_abajo = false;

}

//Colision enemigo
if( sprite_index != sp_jugador_muere and place_meeting(x, y + vel_ver, parent_enemigo) ){ 
    sc_jugador_colision_enemigo(instance_place(x,y + vel_ver,parent_enemigo) ) 
}

//Colisi칩n y movimiento vertical
if( place_meeting(x, y + vel_ver, parent_plataforma ) ){

    var dir_y = sign(vel_ver);

    while( !place_meeting( x, y + dir_y, parent_plataforma) ){ y += dir_y; }
    
    if( dir_y == 1 ){ en_suelo = true; }
    vel_ver = 0;

}
else{

    en_suelo = false;

}

if( y &lt; 460 ){ 

    y += vel_ver; 

    //Movimiento de gravedad
    if( vel_ver &gt;= 0 ){ vel_ver += gravedad + 1; }
    else{ vel_ver += gravedad; }
        
}
else{  if( sprite_index != sp_jugador_muere ){ sc_jugador_pierde(); } }

//Colisi칩n y movimiento horizontal
if( place_meeting( x + vel_hor, y, parent_plataforma) ){

    var colision_plataforma = instance_place( x + vel_hor, y, parent_plataforma );
    
    if( (y - 30) &lt; colision_plataforma.y ){ y = colision_plataforma.y - 2;  }
    else{ 
        
        if( sprite_index != sp_jugador_muere  and colision_plataforma.object_index != ob_plataforma_flotante_mediana ){ sc_jugador_pierde(); }
        
    }
    

}

x += vel_hor;


//Salto
if( boton_salto == true and en_suelo == true ){ 
    audio_sound_pitch( sn_jug_salto, 0.8 + random( 0.4 ) );
    audio_play_sound(sn_jug_salto, 6, false);
    vel_ver = vel_salto; 
}

//Caida (cuando est치 sobre una plataforma que lo permite)
if( boton_abajo == true and en_suelo == true and place_meeting(x, y + 1, ob_plataforma_flotante_mediana) ){ 
    audio_sound_pitch( sn_jug_salto, 0.4 + random( 0.4 ) );
    audio_play_sound(sn_jug_salto, 6, false);
    
    with( instance_place(x, y + 1, ob_plataforma_flotante_mediana) ){ mask_index = -1;}
    
    en_suelo = false;
    y += 28;

}

//Animaci칩n del sprite
if( sprite_index != sp_jugador_muere){ 
    if( en_suelo == true ){ 
    
        image_speed = vel_sprite;
        sprite_index = sp_jugador_corre; 
        
    }
    else{ 

        sprite_index = sp_jugador_aire
        image_speed = 0;
        
        if( vel_ver &lt; 0 ){ image_index = 0; }
        else{ image_index = 1; }
    
    }

}
else{

    image_speed = 0.1;

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Comprobar para efecto estela la Y
if( efecto_estela == true ){

    for(var i = cantidad_estela - 1; i &gt; 0; i--){ prev_y[i] = prev_y[i-1]; }
    prev_y[0] = y;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_basura">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recoger basura
g_puntaje_actual +=1;
with(other){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar sprite jugador
if( efecto_estela == true ){

    for(var i=0; i &lt; cantidad_estela; i++){
        var pos_estela = 1 / (i+1.5);
        draw_sprite_ext(sprite_index,image_index,prev_x[i], prev_y[i], 1, 1, 0, -1, pos_estela);
    }
    
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
